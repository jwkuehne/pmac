;----------------------------------------------------------------------------------
;PLC:					RA Quick Motion
;Application:	2.1M Telescope 
;Author:			John Kuehne
;Date:				29 April 2020
;
; Description: Like DEC, RA slew and search on a single motor. Small steps supported
; with SET. To release clamps motor turns slowly using timer.
;----------------------------------------------------------------------------------
CLOSE
DELETE GATHER

;----------------------------------------------------------------------------------
#include "defines.txt"
;----------------------------------------------------------------------------------

OPEN PLC 8
CLEAR

;----------------------------------------------------------------------------------
; Count encoders for comparison against absolute position for safety.
;----------------------------------------------------------------------------------
   if (ra_clamp = 1) ; QM machinery must be engaged
      ha_start  = ra_base + M362 ; ra_base is M362 set in motion control program MRA just before M362 is homez.
      qm_start  = M162
      ha_idle   = ha_idle   + (ha_start - ha_latch) ; accumulate idle counts during QM time
      qm_active = qm_active + (qm_start - qm_latch) ; accumulate motion counts during QM time
      ha_latch  = ha_start; capture HA encoder position during QM time.
      qm_latch  = qm_start; capture QM encoder position during QM time.
   else
      ha_latch = ra_base + M362; capture HA encoder position during non-QM time.
      qm_latch = M162; capture QM encoder position during non-QM time.
   endif


   ha_total = (ra_base + M362)/16384/40 - qm_active/106.6666/3072 - ha_idle/16384/40 + P1004; N.B. P1004 set in MRA during SET.
   if (race_base = 0); tri-state. 0 is OK to use, 1 in flux, 2 finished with changes, in MRA.
      ha_reg = ha_total; value actually read by Track82, gauranteed not to be in flux on ha_total or new ra_base and M362.
   else
      if (race_base = 2)
         race_base = 0; MRA sets 2 after ra_base and M362 are correct to mix.
      endif
   endif

;----------------------------------------------------------------------------------
; Final state is locked rotor
;----------------------------------------------------------------------------------
if (ra_mask=0) and (M133=1)
; Commanded set to actual in case in velocity mode after manual move. This prevents correction when desired velocity zero, which
; can be large going west against the preload and out-of-balance, causing the track motor to work hard against load.
   if (i111=0)
      M161=M162 I163=500 I167=7000 i111=3*1344000; final state locked rotor.
   endif
   i5311 = 0
   while (i5311 > 5*one_second); Wait for clamps to settle down under preload before allowing a SET.
   endw
   ra_mask=-1; final state
   SUBVERT = 50; Settle down time to try SuperTrack in 5 seconds unless SET kicks in.
endif

;----------------------------------------------------------------------------------
; Finish GO
;----------------------------------------------------------------------------------
if (ra_mask=-8 or ra_mask=-4); We're GO   CHANGE TO MAKE GO INCURSION ABLE TO GET OUT
   qm_advance = 106.6666*ra_track_rate*i5312/one_second; magnitude of westward sidereal motion
   if (abs(M162/3072 - (M172-qm_advance))<1920000+3*8400); if within 5 degrees and 3 turns
      M172 = M172 - qm_advance
      m161=m162; Force commanded position to actual position
      i163=500 i167=7000 i111=3*1344000; Engage a stable position loop, 30 turns following error
      cmd "#1j=*"; Drive onto target with no sidereal compensation for the spin-down
      ra_mask=0; Done
   endif
endif

;----------------------------------------------------------------------------------
; GO
; Set and Slew/Search are blocked by the HA control panel from operating simultaneously,
; so that must be observed here to prevent horrible things from happening, like the Set
; motor failing to turn on while the Track motor thinks it is on, or the RA slew motor
; from coming on with the clutch and clamps not activated. See RA PLC for similar lockouts.
; Use SET to rough-in if less than 6 arcminutes, otherwise use SLEW.
;----------------------------------------------------------------------------------
if (abs(ra_go) > 0); jog register is set
  if (abs(ra_go) < 38400) and (ra_mask = -1) ; Use SET to move onto target for moves less 6 arcminutes or 24 seconds RA
     if (ra_guide_mask=0 and gate_set=1 and ra_track_on=1); only tracking;
        i5212 = -abs(ra_go)/106.66/ra_set_rate*one_second ; start SET timer (minus because one_second is negative)
        guide=0; clear all speeds
        search=0; so Track82 gets a valid code
        slew=0;
        set=1; set speed
        if (ra_go<0)
           west=1; tell RA PLC to SET west
        else
           east=1; tell RA PLC to SET east
        endif
        while (i5212>0 and gate_set=1); hang out until done or the move was aborted/forbidden
        endw
        west=0; stop the motion
        east=0; when RA PLC next encountered.
        set=1;  Leave on set speed
     endif
  else
     if (gate_slew=1 or gate_search=1) and (ra_set_mask=0) ; CHANGE TO MAKE GO INCURSION ABLE TO GET OUT
       P1001   = 0;  MRA SET code will time out track motor velocity mode.
       I367    = 0;  Close only velocity loop - motor will run about the commanded tracking speed without minding the SET motor.
       I363    = 0;  Disable integral gain
       I311    = 0;  Disable fatal following error.
          
       if (ra_mask = -1)
          i163=0; Run in pure velocity loop
          i167=0;
          i111=0       
          i5311=0; slowly turn motor to release clamps for ra_clamp_time
          i121=500
          ra_swap=i122; save the current rate
          i122=.1; slow start to activate clamps and clutch
          cmd "#1j+"
          while (i5311 > ra_clamp_time*one_second)
          endw
          i122=ra_swap; restore correct rate
       endif
       
       IF (gate_slew=1); CHANGE TO MAKE GO ORANGE INCURSION ABLE TO GET OUT
           ra_mask=-8; mask for GO; RATE IS SELECTED BY TRACK82
       ELSE
           ra_mask=-4
           I122=ra_search_rate; FORCE SEARCH SPEED
       ENDIF

       m172=M162/3072 + ra_go; store the position for the end of the move
       i5312 = 0 ; start sidereal/trackrate counter
       qm_advance = 0; reset advance
       i121=1; Don't S-curve a GO - the user isn't pulsing the controls, and doesn't need the help
       if (ra_go > 0);
          cmd "#1j+"
       endif
       if (ra_go < 0)
          cmd "#1j-"
       endif
       if (ra_go = 0) ; ra_go could have changed to zero during the spin-up/clamp-off
          cmd "#1j/";
          ra_mask = 0 ; Move is over, lock rotor when desired velocity zero.
       endif
       i5311=0
       while (i5311 > -23); wait > I192 milliseconds for move to start to prevent race condition with I133
       endw
     endif
   endif
   ra_go=0
endif

;----------------------------------------------------------------------------------
; Console/Virtual console control. To reverse direction or change speed you must
; first command a stop to clear ra_mask.
;----------------------------------------------------------------------------------
if (ceast^east^cwest^west = 1) and (ra_mask < 1); allows interruption of zero or negative mask
   if (search+east+west>1 or csearch+ceast+cwest>1) and (ra_set_mask=0) and (gate_search=1)
      qm_total_rate = ((east - west + ceast - cwest)*ra_search_rate)
      i163=500 i167=7000 i111=1344000; position loop, 10 turns following error is the end of the line
      ra_mask=4;
   endif
   if (slew+east+west>1 or cslew+ceast+cwest>1) and (ra_set_mask=0) and (gate_slew=1)
      qm_total_rate = ((east - west + ceast - cwest)*ra_slew_rate)
      i163=0 i167=0 i111=0; pure velocity loop
      ra_mask=8;
   endif
   if (ra_mask>0)
       ; Track motor goes into velocity mode
       P1001   = 0;  MRA SET code will time out track motor velocity mode.
       I367    = 0;  Close only velocity loop - motor will run about the commanded tracking speed without minding the SET motor.
       I363    = 0;  Disable integral gain
       I311    = 0;  Disable fatal following error.
       
      i121=500; Give the observer some pulse control
      i5311=0; Slowly spin to release clamps for ra_clamp_time.
      i122=0.1
      cmd "#1j+"
      while (i5311 > ra_clamp_time*one_second)
      endw      
      if (qm_total_rate>0) or (qm_total_rate=0)
        I122=qm_total_rate
        cmd "#1j+"
      else
        I122=-qm_total_rate
        cmd "#1j-"
      endif
      i5311=0
      while (i5311 > -23); wait I192 milliseconds for move to start to prevent race condition with I133
      endw
   endif
endif

;----------------------------------------------------------------------------------
; End manually commanded motion or safety codes   CHANGE TO MAKE GO INCURSION ABLE TO GET OUT
;----------------------------------------------------------------------------------
if (ceast+east+cwest+west = 0 and ra_mask > 0) or (gate_slew=0 and abs(ra_mask)=8) or (gate_search=0 and abs(ra_mask)=4)
   cmd "#1j/"
   ra_mask=0
endif

close
